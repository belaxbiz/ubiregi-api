%h1#object-customer Customer

:markdown
  `Customer` object represents a customer, which can be used in Customer Relation Management.

%h2#object-customer-fields Fields

.row
  .span6
    %dl
      %dt= field "id", :readonly, :immutable
      %dd ID of the object
      %dt= field "account_id", :readonly, :immutable
      %dd ID of account which this customer is associated with
      %dt= field "fields"
      %dd
        Array of <code>CustomerField</code> object.
        <code>fields</code> can not be empty.
      %dt= field "guid", :immutable
      %dd
        An GUID which uniquely identifies the customer.
        The GUID is generated in client side, a client should be careful to read it unique.
      %dt= field "deleted"
      %dd <code>true</code> if and only if the customer is deleted.

  .span6
    %pre
      = preserve do
        :escaped
          {
            "id": 100,
            "account_id": 2,
            "fields": [ $customer_fields ],
            "guid": $UUID-like-sequence,
            "deleted": true,
          }

%h2#get-on-customers GET on /customers

:markdown
  Retrieve collection of customers available for the account.

%h3 Request

.row
  .span6
    %pre
      = preserve do
        :escaped
          GET /customers?since=...
  .span6
    %dl
      %dt= field "since"
      %dt= field "until"
      %dt= field "glb"

%h3 Response

.row
  .span6
    %pre
      = preserve do
        :escaped
          {
            "timestamp": "2011-11-02T09:11:34Z",
            "next-url": "https://ubiregi.com/api/3/customers?since=.....",
            "last_updated_at": "2011-12-31T00:00:31Z",
            "customers": [ $customers ],
          }
  .span6
    %dl
      %dt= field "timestamp"
      %dt= field "next-url"
      %dt= field "last_updated_at"
      %dt= field "customers"
    
%h3 Available Customers

:markdown
  An customer is available only if the customer is associated with one of the following:

  1. Current account's parents
  2. Current account's children
  3. Current account's siblings

= image_tag "available-customers.png"

:markdown
  The circles represent accounts and gray arrows represents parent-child associations.
  Accounts covered with purple background are accessible accounts, so that their accounts
  are available to current account (the red one).

%h2#post-on-customers POST on /customers

:markdown
  Create an `Customer` objects, or update `Customer` objects available for current account.

%h3 Request

.row
  .span6
    %pre
      = preserve do
        :escaped
          {
            "customers": [
              {
                "guid": $UUID-like-sequence,
                "deleted": false,
                "updated_fields": [ $customer_fields ],
              }
            ]
          }
  .span6
    %dl
      %dt= field "customers"
      %dd
        Array of <code>Customer</code> objects which will be updated/created.
        %dl
          %dt= field "guid", :optional
          %dt= field "deleted"
          %dt= field "updated_fields", :optional
          %dd
            Array of updated or newly inserted <code>CustomerField</code>s.

%h3 Response
.row
  .span6
    %pre
      = preserve do
        :escaped
          {
            "timestamp": "2012-02-14T09:00:00Z",
            "customers" : [ $customers ]
          }
  .span6
    %dl
      %dt= field "timestamp"
      %dt= field "customers"

%h3 updated_fields

:markdown
  It is not allowed to destroy `CustomerField`s.
  Thus, `fields` attribute in POST requests are not defined, but `updated_fields` should be used instead.
  To (logically) destroy `CustomerField`s, set its `deleted` field to `true`.

