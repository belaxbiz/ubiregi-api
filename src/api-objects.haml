%h2#api-objects Objects

:markdown
  Every object has `created_at` and `updated_at` fields.

%h3#api-objects-type-annotations Type annotations

%dl
  %dt integer
  %dd The value should integer.
  %dt number
  %dd The value should be number; real number or integer.
  %dt string
  %dd The value should be a string.
  %dt boolean
  %dd The value should be a boolean.

%dl
  %dt array of $type
  %dd array of values which type is $type.

%dl
  %dt $<em>type</em>
  %dd Object of <em>type</em>.
  %dt $<em>type</em><code>s</code>
  %dd
    Sequence of objects of <em>type</em>.
    Usually contents of an array.
  %dt $base64Encoded
  %dd Base64 encoded string of a binary data.
  %dt $UUID-like-sequence
  %dd
    String which is expected to be unique in the world.
    It is UUID in the case the sequence is generated in server.
    If it is generated by iOS, it is not an exact UUID but an extended one by Apple.
  %dt $Time
  %dd ISO8601 format string of a time.

= render "api-account"
= render "api-table"
= render "api-customer-tag"
= render "api-cashier"
= render "api-payment-type"
= render "api-menu-item"

= render "api-checkout"
= render "api-checkout-item"
= render "api-checkout-payment"

= render "api-customer"
= render "api-customer-field"


%h3#api-objects-customer-note Customer Note

:markdown
  A customer note belongs to a customer.

.row
  .span8
    %h4 Fields

    %dl
      %dt id :: integer
      %dd ID of this object.
      %dt customer_id :: integer (<em>required</em>)
      %dd ID which thie object belongs to.
      %dt app_created_at (<em>required</em> and <em>WriteOnly</em>)
      %dd Time when the note is created in a client app
      %dt guid (<em>required</em>)
      %dd GUID
      %dt checkout_id :: integer
      %dt kind (<em>ReadOnly</em>)
      %dt note :: string
      %dt photo
      %dt checkout_summary
  .span8
    %h4 Example

    %pre
      = preserve do
        :escaped
          {
            "id": 1,
            "customer_id": 1,
            "app_created_at": "2012-02-14T00:00:00Z",
            "guid": $UUID-like-sequence,
            "checkout_id": 2,
            "kind": 2,
            "note": "Memo Memo",
            "photo": $base64Encoded,
            "checkout_summary": "Summary"
          }


%h3#api-objects-friend Friend

:markdown
  Account summary information for chain branches.

.row
  .span8
    %h4 Fields

    %dl
      %dt id :: integer
      %dd ID of account.
      %dt name :: string
      %dd Name of the account.
  .span8
    %h4 Example

    %pre
      = preserve do
        :escaped
          {
            id: 199,
            name: "hogehoge",
          }


%h3#api-objects-category Category

:markdown
  Categories are used to organize items in a menu. Categories can not be nested.

.row
  .span8
    %h4 Fields

    %dl
      %dt id :: integer
      %dd ID of the object.
      %dt name :: string
      %dd Name of the category.
      %dt position
      %dd
        :markdown
          Position of the category in menu. `null` if the category is disabled.
  .span8
    %h4 Example
    %pre
      = preserve do
        :escaped
          {
            "id": 18,
            "name": "Soft Drink",
            "position": 4,
          }


%h3#api-objects-stock-event Stock Event

:markdown
  Event object related to stock control.
  The object is used to tell someone that stock-related event has occured.
  Type of a stock event is either "inventory", "arrival", "shipping", or "order".

.row
  .span8
    %h4 Fields

    %dl
      %dt id :: int
      %dd ID of the event.
      %dt menu_item_id :: int
      %dd ID of the menu item associated with the event.
      %dt app_created_at
      %dd Time when the event has been created in a client app.  <em>WriteOnly</em>
      %dt inventory_at
      %dd Time when the inentory event has occured.  It maybe different from app_created_at.
      %dt event_type :: string
      %dd Type of the event (either "inventory", "arrival", "shipping", or "order").
      %dt amount :: real
      %dd 
        Amount related to the event.  <em>Note that the meaning of the value of this attribute depends on `event_type`</em>.
        Assume that the value of amount is 55.  The meaning of this value depends on the value of `event_type` as followings:
        %ul
          %li "inventory" : The number of inventory specified by `menu_item_id` is 55.
          %li "arrival" :  55 items specified by `menu_item_id` has arrived.
          %li "shipping" : 55 items specified by `menu_item_id` has shipped.
          %li "order" : 55 items specified by `menu_item_id` has been ordered.
      %dt uuid
      %dd UUID associated to the event.  This is used to prevent duplicated posts.
      %dt body
      %dd An arbitrary JSON object.  The usage of the value is not decided yet.
  .span8
    %h4 Example

    %pre
      = preserve do
        :escaped
          {
            "id" : 1,
            "menu_item_id" : 2,
            "app_created_at" : "2012-02-14T00:00:00Z",
            "inventory__at" : "2012-02-14T01:00:00Z",
            "event_type" : "arrival",
            "amount" : 55,
            "uuid" : $UUID,
            "body" : { "note" : "This object represents that 55 items specified by `menu_item_id` has arrived" },
          }
